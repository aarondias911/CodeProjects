<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xceed.Wpf.Themes.Windows10</name>
    </assembly>
    <members>
        <member name="P:Xceed.Wpf.Themes.Windows10.Licenser.LicenseKey">
            <summary>
            Gets or sets the license key used to license this product.
            </summary>
            <value>A string value representing the license key used to license this product.</value>
        </member>
        <member name="M:Xceed.Wpf.Themes.Windows10.Licenser.VerifyLicense">
            <summary>
            Verifies that the license is valid for a specific product.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xceed.Wpf.Themes.Windows10.Licenser.VerifyLicenseDesignMode">
            <summary>
            Verifies that the license is valid for a specific product at design time.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Xceed.Wpf.Themes.Windows10.Licenser.License">
            <summary>
            Returns the Xceed license created by the LicenseKey assignment.
            </summary>
        </member>
        <member name="M:Xceed.Wpf.Themes.Windows10.Windows10Resources.ExtractObjectFromResource``1(System.String,System.String)">
            <summary>
            Returns the object contained in the specified xaml file having the specified x:Key.
            </summary>
            <param name="xamlResourceDictionaryFileName">The name of the xaml file containing 
            the desired object. The extension can be omitted.</param>
            <param name="styleKeyName">The x:Key value of the object to extract.</param>
        </member>
        <member name="M:Xceed.Wpf.Themes.Windows10.Windows10ThemeLicense.CreateLicense(System.String,System.Type)">
            <summary>
            Create xceed specific component license here.
            </summary>
            <param name="licenseKey"></param>
            <param name="licenserType"></param>
            <returns></returns>
        </member>
        <member name="P:Xceed.Wpf.Themes.Windows10.Windows10ThemeLicense.AllowedVersions">
            <summary>
            All the version number supported by this version of the product.
            </summary>
            <remarks>
            The versions should be in descending order beginning with the
            less restrictive up to the more restrictive.
            </remarks>
        </member>
        <member name="P:Xceed.Wpf.Themes.Windows10.Windows10ThemeLicense.LicenseeType">
            <summary>
            The type of the class or control that is licensed by this class (or, more
            exactly, a class derived from this one).
            </summary>
            <remarks>
            If more than one class is licensed by the XceedLicense class, the LicenseeType
            can simply be typeof( Licenser ).
            </remarks>
        </member>
        <member name="M:Xceed.Utils.Licensing.XceedLicense.Initialize(System.String,System.Type)">
            <summary>
            Must be called after instantiation to initialize and verify the license parameters 
            </summary>
            <param name="licenseKey"></param>
            <param name="licenserType"></param>
        </member>
        <member name="P:Xceed.Utils.Licensing.XceedLicense.IsFromRegistry">
            <summary>
            True if the license was read from the registry
            </summary>
        </member>
        <member name="M:Xceed.Utils.Licensing.XceedLicense.GetLicenseKeyFromRegistry">
            <summary>
            Retreives the license from the registry. Usefull when there is no license set on a developper's machine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xceed.Utils.Licensing.XceedLicense.ValidateLicenseKey(Xceed.Utils.Licensing.XceedLicenseManager@,System.String@,System.Boolean,System.Boolean)">
            <summary>
            Validates a license key \
            if there is no license key in the registry 
              on a developper's machine -> trial is beginning
              not on a developper's machine -> 
            </summary>
        </member>
        <member name="F:Xceed.Utils.Licensing.XceedLicense.m_daysLeft">
            <summary>
            Days left until trial expires
            </summary>
        </member>
        <member name="F:Xceed.Utils.Licensing.XceedLicense.m_isFromRegistry">
            <summary>
            True if the license was read from the registry
            </summary>
        </member>
        <member name="F:Xceed.Utils.Licensing.XceedLicense.m_performedFeratureAnalysis">
            <summary>
            Remembers all previously used feature analysis 
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
